############ ACTUAL PRODUCE METER
with monthly_produce_meter AS (
SELECT 
  CAST(malo AS STRING) AS malo,
  EXTRACT(MONTH FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS month,
  EXTRACT(YEAR FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS year,
  SUM(measured_power__kw_ * 0.25) AS monthly_energy_kWh,
  SUM(measured_power__kw_ * 0.25 / 1000) AS monthly_energy_MWh
FROM `flex-power.domain.dso__infeed_and_offtake__measured_per_meter_point_latest` 
GROUP BY malo, month, year
),


-- total 1036 unique malo 
produce_meter_quarter AS (
SELECT 
  DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin') AS delivery_start_berlin,
  CAST(malo AS STRING) AS malo,
  SUM(measured_power__kw_ * 0.25) AS quarterly_energy_kWh,
  SUM(measured_power__kw_ * 0.25 / 1000) AS quarterly_energy_MWh

  /* 
  EXTRACT(DAY FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS hour,
  EXTRACT(MONTH FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS month,
  EXTRACT(YEAR FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS year,
  
  */
FROM `flex-power.domain.dso__infeed_and_offtake__measured_per_meter_point_latest` 
GROUP BY malo, delivery_start_berlin
),


unique_malo_temp as (
SELECT 
    malo,
    park_id,
    technology,
    balancing_type,
    tso,
    contract_id,
    FIRST_VALUE(name) OVER (PARTITION BY malo ORDER BY name) AS name,
    FIRST_VALUE(unit_id) OVER (PARTITION BY malo ORDER BY unit_id) AS unit_id
  FROM `flex-power.domain.crm__assets__upgrid_units`
  WHERE malo IS NOT NULL
),


unique_malo as (
SELECT DISTINCT malo, park_id, technology, balancing_type, tso, contract_id, name, unit_id
FROM unique_malo_temp
),


-- joining produce KWh and power plant data
join_produce_meter_park AS (
SELECT
  a.*,
  b.park_id,
  b.technology,
  b.balancing_type,
  b.tso,
  b.contract_id,
  b.name,
  b.unit_id
FROM produce_meter_quarter a
INNER JOIN unique_malo b
ON a.malo = b.malo
),


-- 512 malo
malo_atleast_one_year AS (
  SELECT 
    malo,
    MIN(delivery_start_berlin) AS earliest_berlin_time,
    MAX(delivery_start_berlin) AS latest_berlin_time,
    TIMESTAMP_DIFF(
      MAX(delivery_start_berlin),
      MIN(delivery_start_berlin),
      MONTH
    ) AS months_of_data
  FROM produce_meter_quarter
  GROUP BY malo
  HAVING TIMESTAMP_DIFF(
      MAX(delivery_start_berlin),
      MIN(delivery_start_berlin),
      MONTH
    ) >= 12
  ORDER BY earliest_berlin_time
),


-- testing new code, every 1st day of the month has value: 357 data as well # checked
malo_with_month_starts AS (
  SELECT
    malo,
    DATE_TRUNC(DATE(delivery_start_berlin), MONTH) AS month_start
  FROM `flex-power.playground_sales.rmv_dayahead_meter`
  WHERE delivery_start_berlin BETWEEN '2024-01-01' AND '2024-12-31'
    AND EXTRACT(DAY FROM delivery_start_berlin) = 1
  GROUP BY malo, month_start
),

malo_full_2024 AS (
  SELECT malo
  FROM malo_with_month_starts
  GROUP BY malo
  HAVING COUNT(DISTINCT month_start) = 12
)

/*
SELECT DISTINCT a.malo
FROM produce_meter_quarter a
LEFT JOIN unique_malo b
ON a.malo = b.malo
WHERE b.malo IS NULL
*/

SELECT
   *
FROM join_produce_meter_park






######### combining rmv, day ahead price, and actual production

WITH rmv_data AS (
  SELECT
    EXTRACT(YEAR FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS year,
    EXTRACT(MONTH FROM DATETIME(TIMESTAMP(delivery_start__utc_), 'Europe/Berlin')) AS month,
    CASE 
      WHEN technology = 'SOLAR' THEN 'PV'
      WHEN technology = 'WIND_ONSHORE' THEN 'WIND'
      WHEN technology = 'CONTROLLABLE' THEN 'BIOGAS'
      ELSE technology
    END AS tech_group,
    AVG(price__euro_per_mwh_) AS rmv_eur_per_mwh
  FROM `flex-power.domain.fundamentals__reference_market_value__actual`
  WHERE technology IN ('SOLAR', 'WIND_ONSHORE', 'CONTROLLABLE')
  GROUP BY year, month, tech_group
),

dayahead_data AS(
  SELECT hourly_data, dayaheadprice_eur_mwh,
    EXTRACT(HOUR FROM hourly_data) AS houroftheday,
    EXTRACT(DAY FROM hourly_data) AS day,
    EXTRACT(MONTH FROM hourly_data) AS month,
    EXTRACT(YEAR FROM hourly_data) AS year
  FROM `flex-power.playground_sales.Dayaheadprice`
),

produce_data AS (
  SELECT 
    *,
    EXTRACT(HOUR FROM delivery_start_berlin) AS houroftheday,
    EXTRACT(DAY FROM delivery_start_berlin) AS day,
    EXTRACT(MONTH FROM delivery_start_berlin) AS month,
    EXTRACT(YEAR FROM delivery_start_berlin) AS year
  FROM `flex-power.playground_sales.ACTUAL_PRODUCE_METER`
),


merge_1 as (
SELECT 
  a.delivery_start_berlin,
  a.houroftheday,
  a.day,
  a.month,
  a.year,

  a.malo, 
  a.quarterly_energy_kWh,
  a.quarterly_energy_MWh,

  b.rmv_eur_per_mwh,

  a.technology,
  a.park_id,
  a.balancing_type,
  a.tso,
  a.contract_id,
  a.name,
  a.unit_id,

FROM produce_data a
  LEFT JOIN rmv_data b
    ON a.year = b.year
    AND a.month = b.month
    AND a.technology = b.tech_group
),

rmv_dayahead_meter_data as (
  SELECT
    c.delivery_start_berlin,
    c.houroftheday,
    c.day,
    c.month,
    c.year,
    c.malo,
    c.quarterly_energy_kWh,
    c.quarterly_energy_MWh,

    d.dayaheadprice_eur_mwh,
    c.rmv_eur_per_mwh,

    c.technology,
    c.park_id,
    c.balancing_type,
    c.tso,
    c.contract_id,
    c.name,unit_id
  FROM merge_1 c
    LEFT JOIN dayahead_data d
    ON c.year = d.year
    AND c.month = d.month
    AND c.day = d.day
    AND c.houroftheday = d.houroftheday
)


SELECT * FROM rmv_dayahead_meter_data












SELECT 
  month,
  year,
  malo,

  quarterly_energy_kWh,
  quarterly_energy_MWh,
  dayaheadprice_eur_mwh,
  rmv_eur_per_mwh,
  payout_spot_eur,
  payout_rmv_eur,

  technology,
  park_id,
  balancing_type,
  tso,
  contract_id,
  name,
  unit_id,
  
